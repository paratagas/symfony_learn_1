<?php

namespace AppBundle\Repository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * Мой собственный класс-репозиторий
 * Позволяет убрать логику выборки из БД из контроллера
 * и перенести ее в репозиторий
 * В контроллере остается лишь вызвать нужный метод класса
 *
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{
    // метод из документации
    public function findAllOrderedByName()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT p FROM AppBundle:Product p ORDER BY p.name ASC'
            )
            ->getResult();
    }

    // метод на основе Doctrine Query Language (DQL)
    public function myCustomFindByDQL($price)
    {
        // entity manager can be accessed via $this->getEntityManager() from inside the repository
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT p
            FROM AppBundle:Product p
            WHERE p.price > :price
            ORDER BY p.price ASC'
        )->setParameter('price', $price);

        $products = $query->getResult();
        return $products;
    }

    // метод на основе Doctrine's Query Builder - пока наиболее предпочтительный
    public function myCustomFindByQueryBuilder($price)
    {
        // createQueryBuilder automatically selects FROM AppBundle:Product
        // and aliases it to "p"
        $query = $this->createQueryBuilder('p')
            ->where('p.price > :price') // :price передается ниже в setParameter()
            ->setParameter('price', $price)
            ->orderBy('p.price', 'ASC')
            ->getQuery();

        $products = $query->getResult();
        return $products;
    }

    public function findOneByIdJoinedToCategory($id)
    {
        // объединенный запрос с одновременной выборкой продукта и категории
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT p, c FROM AppBundle:Product p
            JOIN p.category c
            WHERE p.id = :id'
            )->setParameter('id', $id);

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
